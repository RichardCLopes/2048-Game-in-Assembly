TITLE 2048 - PROJETO 2
.MODEL SMALL
.STACK 100H
.DATA
TITULO DB '2048$'
MSG_PONTOS DB 'PONTUACAO: $'
MSG_PONTOS2 DB 'MOVER: $' 
MSG_PONTOS3 DB 'A - ESQUERDA$'
MSG_PONTOS4 DB 'D - DIREITA$'
MSG_PONTOS5 DB 'W - CIMA$'
MSG_PONTOS6 DB 'S - BAIXO$'
MSG_FIM1 DB 'VOCE PERDEU! $'
MSG_FIM2 DB 'VOCE GANHOU! $'
MSG_FIM3 DB 'S - RECOMECAR N - SAIR $'
COORD_INICIO_QUAD DW 0
COORD_FIM_QUAD DW 0
X_INICIO_PIXEL DW 0
X_FIM_PIXEL DW 0
Y_INICIO_PIXEL DW 0
Y_FIM_PIXEL DW 0
X_INICIO_NUMERO DW 0
Y_INICIO_NUMERO DW 0
CORES_QUAD DB 0
COR_PIXEL DB 0
NUMERO_ATUAL DW 0
ACABOU DW 0
TROCOU_POSICAO DW 0
TROCAS DW 1B
GANHOU DW 0
;COORDENADAS INICIAIS DOS QUADRADOS
B1_X DW 8
B1_Y DW 8
B2_X DW 56
B2_Y DW 8
B3_X DW 104
B3_Y DW 8
B4_X DW 152
B4_Y DW 8
B5_X DW 8
B5_Y DW 56
B6_X DW 56
B6_Y DW 56
B7_X DW 104
B7_Y DW 56
B8_X DW 152
B8_Y DW 56
B9_X DW 8
B9_Y DW 104
B10_X DW 56
B10_Y DW 104
B11_X DW 104
B11_Y DW 104
B12_X DW 152
B12_Y DW 104
B13_X DW 8
B13_Y DW 152
B14_X DW 56
B14_Y DW 152
B15_X DW 104
B15_Y DW 152
B16_X DW 152
B16_Y DW 152
B1 DW 0
B2 DW 0
B3 DW 0
B4 DW 0
B5 DW 0
B6 DW 0
B7 DW 0
B8 DW 0
B9 DW 0
B10 DW 0
B11 DW 0
B12 DW 0
B13 DW 0
B14 DW 0
B15 DW 0
B16 DW 0
.CODE
MAIN PROC
;INICIA O DATA
	MOV AX, @DATA
	MOV DS, AX

RECOMECA:
;DEFINE O TAMANHO DA TELA
	MOV AH, 0
	MOV AL, 19
	INT 10H	
	
	CALL BACKGROUND_TABULEIRO
	
	MOV CORES_QUAD, 01000010B
	
	MOV TROCAS, 1B
	MOV ACABOU, 0
	
	CALL ZERA_BLOCOS

;Gera dois blocos randomicos
	CALL RANDOM_NUMERO
	
TROCA_POS_INICIAL1:	
	CALL RANDOM_POS
	CMP TROCOU_POSICAO, 1
	JNE TROCA_POS_INICIAL1
	
ATUALIZA:
;Encontra uma posição válida
	MOV TROCOU_POSICAO, 0
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 110
	MOV DH, 4
	INT 10H	
	
	LEA DX, TITULO
	
	MOV AH, 9
	INT 21H
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 105
	MOV DH, 7
	INT 10H	
	
	LEA DX, MSG_PONTOS
	
	MOV AH, 9
	INT 21H
	
	MOV AX, TROCAS
	CALL SAI_NUM
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 105
	MOV DH, 11
	INT 10H	
	
	LEA DX, MSG_PONTOS2
	
	MOV AH, 9
	INT 21H
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 105
	MOV DH, 13
	INT 10H	
	
	LEA DX, MSG_PONTOS3
	
	MOV AH, 9
	INT 21H
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 105
	MOV DH, 15
	INT 10H	
	
	LEA DX, MSG_PONTOS4
	
	MOV AH, 9
	INT 21H
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 105
	MOV DH, 17
	INT 10H	
	
	LEA DX, MSG_PONTOS5
	
	MOV AH, 9
	INT 21H
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 105
	MOV DH, 19
	INT 10H	
	
	LEA DX, MSG_PONTOS6
	
	MOV AH, 9
	INT 21H
	
	CALL VERIFICA_FINAL
	CMP ACABOU, 0
	JNE FIM_PERDEU
	
	CALL RANDOM_NUMERO
	
TROCA_POS:	
	CALL RANDOM_POS
	CMP TROCOU_POSICAO, 1
	JNE TROCA_POS
	
	CALL TABULEIRO

COMANDOS:
	CALL LIMPA_TELA
	
;Recebendo os dados do teclado
	MOV AH, 1
	INT 21H

COMANDO_DIREITA:	
	CMP AL, 'd'
	JNE COMANDO_ESQUERDA
	
	CALL TECLA_DIR
	
COMANDO_ESQUERDA:
	CMP AL, 'a'
	JNE COMANDO_CIMA
	
	CALL TECLA_ESQ
	
COMANDO_CIMA:
	CMP AL, 'w'
	JNE COMANDO_BAIXO
	
	CALL TECLA_CIMA
	
COMANDO_BAIXO:
	CMP AL, 's'
	JNE COMANDO_ADM
	
	CALL TECLA_BAIXO
	
COMANDO_ADM:
	CMP AL, 'q'
	JNE ATUALIZA_TABULEIRO
	
	JMP SAIR

RECOMECA1: JMP RECOMECA
	
ATUALIZA_TABULEIRO:
	ADD TROCAS, 1
	
	CALL VERIFICA_GANHOU
	
	CMP GANHOU, 1
	JE FIM_GANHOU
	
	JMP ATUALIZA

FIM_PERDEU:
;APAGA O TABULEIRO
	MOV AH, 0
	MOV AL, 19
	INT 10H	
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 54
	MOV DH, 7
	INT 10H	
	
	LEA DX, MSG_FIM1
	
	MOV AH, 9
	INT 21H
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 9
	MOV DH, 9
	INT 10H	
	
	LEA DX, MSG_FIM3
	
	MOV AH, 9
	INT 21H
	
	CALL LIMPA_TELA
	
;Recebendo os dados do teclado
	MOV AH, 1
	INT 21H
	
	CMP AL, 's'
	JE RECOMECA1
	
	CMP AL, 'S'
	JE RECOMECA1
	
	JMP SAIR
	
RECOMECA2: JMP RECOMECA1

FIM_GANHOU:
;APAGA O TABULEIRO
	MOV AH, 0
	MOV AL, 19
	INT 10H	
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 54
	MOV DH, 7
	INT 10H	
	
	LEA DX, MSG_FIM2
	
	MOV AH, 9
	INT 21H
	
	MOV AH, 2
	MOV BH, 0
	MOV DL, 9
	MOV DH, 9
	INT 10H	
	
	LEA DX, MSG_FIM3
	
	MOV AH, 9
	INT 21H
	
	CALL LIMPA_TELA
	
;Recebendo os dados do teclado
	MOV AH, 1
	INT 21H
	
	CMP AL, 's'
	JE RECOMECA2
	
	CMP AL, 'S'
	JE RECOMECA2	
	
SAIR:	
;Voltando a resolução inicial
	MOV AH, 0
	MOV AL, 3
	INT 10H
	
;Finalizando para o DOS
	MOV AH, 4CH
	INT 21H
MAIN ENDP

TECLA_DIR PROC
VERIFICA_NULO_1D:
	CMP B2, 0
	JNE VERIFICA_NULO_2D
	
	MOV BX, B1
	MOV B2, BX

	MOV B1, 0
	
VERIFICA_NULO_2D:
	CMP B3, 0
	JNE VERIFICA_NULO_3D
	
	MOV BX, B2
	MOV B3, BX
	
	MOV BX, B1
	MOV B2, BX
	
	MOV B1, 0
	
VERIFICA_NULO_3D:
	CMP B4, 0
	JNE VERIFICA_NULO_4D
	
	MOV BX, B3
	MOV B4, BX
	
	MOV BX, B2
	MOV B3, BX
	
	MOV BX, B1
	MOV B2, BX	
	
	MOV B1, 0
	
VERIFICA_NULO_4D:
	CMP B6, 0
	JNE VERIFICA_NULO_5D
	
	MOV BX, B5
	MOV B6, BX
	
	MOV B5, 0
	
VERIFICA_NULO_5D:
	CMP B7, 0
	JNE VERIFICA_NULO_6D
	
	MOV BX, B6
	MOV B7, BX
	
	MOV BX, B5
	MOV B6, BX
	
	MOV B5, 0
	
VERIFICA_NULO_6D:
	CMP B8, 0
	JNE VERIFICA_NULO_7D
	
	MOV BX, B7
	MOV B8, BX
	
	MOV BX, B6
	MOV B7, BX
	
	MOV BX, B5
	MOV B6, BX
	
	MOV B5, 0
	
VERIFICA_NULO_7D:
	CMP B10, 0
	JNE VERIFICA_NULO_8D
	
	MOV BX, B9
	MOV B10, BX
	
	MOV B9, 0
	
VERIFICA_NULO_8D:
	CMP B11, 0
	JNE VERIFICA_NULO_9D
	
	MOV BX, B10
	MOV B11, BX
	
	MOV BX, B9
	MOV B10, BX
	
	MOV B9, 0
	
VERIFICA_NULO_9D:
	CMP B12, 0
	JNE VERIFICA_NULO_10D
	
	MOV BX, B11
	MOV B12, BX
	
	MOV BX, B10
	MOV B11, BX
	
	MOV BX, B9
	MOV B10, BX
	
	MOV B9, 0
	
VERIFICA_NULO_10D:
	CMP B14, 0
	JNE VERIFICA_NULO_11D
	
	MOV BX, B13
	MOV B14, BX
	
	MOV B13, 0

VERIFICA_NULO_11D:
	CMP B15, 0
	JNE VERIFICA_NULO_12D
	
	MOV BX, B14
	MOV B15, BX
	
	MOV BX, B13
	MOV B14, BX
	
	MOV B13, 0	
	
VERIFICA_NULO_12D:
	CMP B16, 0
	JNE VERIFICA_1D
	
	MOV BX, B15
	MOV B16, BX
	
	MOV BX, B14
	MOV B15, BX
	
	MOV BX, B13
	MOV B14, BX
	
	MOV B13, 0	
	
VERIFICA_1D:
	MOV BX, B3
	CMP B4, BX
	JNE PULA1D

	ADD B4, BX
	
	MOV BX, B2
	MOV B3, BX
	
	MOV BX, B1
	MOV B2, BX
	
	MOV B1, 0
	
PULA1D:	
	MOV BX, B2
	CMP B3, BX
	JNE PULA2D

	ADD B3, BX
	
	MOV BX, B1
	MOV B2, BX
	
	MOV B1, 0
	
PULA2D:
	
	MOV BX, B1
	CMP B2, BX
	JNE PULA3D

	ADD B2, BX
	
	MOV B1, 0
	
PULA3D:
	
	MOV BX, B7
	CMP B8, BX
	JNE PULA4D

	ADD B8, BX
	
	MOV BX, B6
	MOV B7, BX
	
	MOV BX, B5
	MOV B6, BX
	
	MOV B5, 0
	
PULA4D:	
	
	MOV BX, B6
	CMP B7, BX
	JNE PULA5D

	ADD B7, BX
	
	MOV BX, B5
	MOV B6, BX
	
	MOV B5, 0
	
PULA5D:	
	
	MOV BX, B5
	CMP B6, BX
	JNE PULA6D

	ADD B6, BX
	
	MOV B5, 0
	
PULA6D:

	MOV BX, B11
	CMP B12, BX
	JNE PULA7D

	ADD B12, BX
	
	MOV BX, B10
	MOV B11, BX
	
	MOV BX, B9
	MOV B10, BX
	
	MOV B9, 0
	
PULA7D:	
	
	MOV BX, B10
	CMP B11, BX
	JNE PULA8D

	ADD B11, BX
	
	MOV BX, B9
	MOV B10, BX
	
	MOV B9, 0
	
PULA8D:	
	
	MOV BX, B9
	CMP B10, BX
	JNE PULA9D

	ADD B10, BX
	
	MOV B9, 0
	
PULA9D:
	
	MOV BX, B15
	CMP B16, BX
	JNE PULA10D

	ADD B16, BX
	
	MOV BX, B14
	MOV B15, BX
	
	MOV BX, B13
	MOV B14, BX
	
	MOV B13, 0
	
PULA10D:
	
	MOV BX, B14
	CMP B15, BX
	JNE PULA11D

	ADD B15, BX
	
	MOV BX, B13
	MOV B14, BX
	
	MOV B13, 0
	
PULA11D:
	
	MOV BX, B13
	CMP B14, BX
	JNE PULA12D

	ADD B14, BX
	
	MOV B13, 0
	
PULA12D:
	
	RET
TECLA_DIR ENDP

TECLA_ESQ PROC
VERIFICA_NULO_1E:
	CMP B3, 0
	JNE VERIFICA_NULO_2E
	
	MOV BX, B4
	MOV B3, BX

	MOV B4, 0
	
VERIFICA_NULO_2E:
	CMP B2, 0
	JNE VERIFICA_NULO_3E
	
	MOV BX, B3
	MOV B2, BX
	
	MOV BX, B4
	MOV B3, BX
	
	MOV B4, 0
	
VERIFICA_NULO_3E:
	CMP B1, 0
	JNE VERIFICA_NULO_4E
	
	MOV BX, B2
	MOV B1, BX
	
	MOV BX, B3
	MOV B2, BX
	
	MOV BX, B4
	MOV B3, BX
	
	MOV B4, 0
	
VERIFICA_NULO_4E:
	CMP B7, 0
	JNE VERIFICA_NULO_5E
	
	MOV BX, B8
	MOV B7, BX

	MOV B8, 0
	
VERIFICA_NULO_5E:
	CMP B6, 0
	JNE VERIFICA_NULO_6E
	
	MOV BX, B7
	MOV B6, BX
	
	MOV BX, B8
	MOV B7, BX

	MOV B8, 0
	
VERIFICA_NULO_6E:
	CMP B5, 0
	JNE VERIFICA_NULO_7E
	
	MOV BX, B6
	MOV B5, BX
	
	MOV BX, B7
	MOV B6, BX
	
	MOV BX, B8
	MOV B7, BX

	MOV B8, 0
	
VERIFICA_NULO_7E:
	CMP B11, 0
	JNE VERIFICA_NULO_8E
	
	MOV BX, B12
	MOV B11, BX

	MOV B12, 0
	
VERIFICA_NULO_8E:
	CMP B10, 0
	JNE VERIFICA_NULO_9E
	
	MOV BX, B11
	MOV B10, BX
	
	MOV BX, B12
	MOV B11, BX

	MOV B12, 0
	
VERIFICA_NULO_9E:
	CMP B9, 0
	JNE VERIFICA_NULO_10E
	
	MOV BX, B10
	MOV B9, BX
	
	MOV BX, B11
	MOV B10, BX
	
	MOV BX, B12
	MOV B11, BX

	MOV B12, 0
	
VERIFICA_NULO_10E:
	CMP B15, 0
	JNE VERIFICA_NULO_11E
	
	MOV BX, B16
	MOV B15, BX
	
	MOV B16, 0

VERIFICA_NULO_11E:
	CMP B14, 0
	JNE VERIFICA_NULO_12E
	
	MOV BX, B15
	MOV B14, BX
	
	MOV BX, B16
	MOV B15, BX
	
	MOV B16, 0
	
VERIFICA_NULO_12E:
	CMP B13, 0
	JNE VERIFICA_1E
	
	MOV BX, B14
	MOV B13, BX
	
	MOV BX, B15
	MOV B14, BX
	
	MOV BX, B16
	MOV B15, BX
	
	MOV B16, 0
	
VERIFICA_1E:
	MOV BX, B2
	CMP B1, BX
	JNE PULA1E

	ADD B1, BX
	
	MOV BX, B3
	MOV B2, BX
	
	MOV BX, B4
	MOV B3, BX
	
	MOV B4, 0
	
PULA1E:	
	MOV BX, B3
	CMP B2, BX
	JNE PULA2E

	ADD B2, BX
	
	MOV BX, B4
	MOV B3, BX
	
	MOV B4, 0
	
PULA2E:
	
	MOV BX, B4
	CMP B3, BX
	JNE PULA3E

	ADD B3, BX
	
	MOV B4, 0
	
PULA3E:
	
	MOV BX, B6
	CMP B5, BX
	JNE PULA4E

	ADD B5, BX
	
	MOV BX, B7
	MOV B6, BX
	
	MOV BX, B8
	MOV B7, BX
	
	MOV B8, 0
	
PULA4E:	
	
	MOV BX, B7
	CMP B6, BX
	JNE PULA5E

	ADD B6, BX
	
	MOV BX, B8
	MOV B7, BX
	
	MOV B8, 0
	
PULA5E:	
	
	MOV BX, B8
	CMP B7, BX
	JNE PULA6E

	ADD B7, BX
	
	MOV B8, 0
	
PULA6E:

	MOV BX, B10
	CMP B9, BX
	JNE PULA7E

	ADD B9, BX
	
	MOV BX, B11
	MOV B10, BX
	
	MOV BX, B12
	MOV B11, BX
	
	MOV B12, 0
	
PULA7E:	
	
	MOV BX, B11
	CMP B10, BX
	JNE PULA8E

	ADD B10, BX
	
	MOV BX, B12
	MOV B11, BX
	
	MOV B12, 0
	
PULA8E:	
	
	MOV BX, B12
	CMP B11, BX
	JNE PULA9E

	ADD B11, BX
	
	MOV B12, 0
	
PULA9E:
	
	MOV BX, B14
	CMP B13, BX
	JNE PULA10E

	ADD B13, BX
	
	MOV BX, B15
	MOV B14, BX
	
	MOV BX, B16
	MOV B15, BX
	
	MOV B16, 0	
	
PULA10E:
	
	MOV BX, B15
	CMP B14, BX
	JNE PULA11E

	ADD B14, BX
	
	MOV BX, B16
	MOV B15, BX
	
	MOV B16, 0	
	
PULA11E:
	
	MOV BX, B16
	CMP B15, BX
	JNE PULA12E

	ADD B15, BX
	
	MOV B16, 0	
	
PULA12E:
	
	RET
TECLA_ESQ ENDP

TECLA_CIMA PROC
VERIFICA_NULO_1C:
	CMP B9, 0
	JNE VERIFICA_NULO_2C
	
	MOV BX, B13
	MOV B9, BX

	MOV B13, 0
	
VERIFICA_NULO_2C:
	CMP B5, 0
	JNE VERIFICA_NULO_3C
	
	MOV BX, B9
	MOV B5, BX
	
	MOV BX, B13
	MOV B9, BX
	
	MOV B13, 0
	
VERIFICA_NULO_3C:
	CMP B1, 0
	JNE VERIFICA_NULO_4C
	
	MOV BX, B5
	MOV B1, BX
	
	MOV BX, B9
	MOV B5, BX
	
	MOV BX, B13
	MOV B9, BX
	
	MOV B13, 0
	
VERIFICA_NULO_4C:
	CMP B10, 0
	JNE VERIFICA_NULO_5C
	
	MOV BX, B14
	MOV B10, BX

	MOV B14, 0
	
VERIFICA_NULO_5C:
	CMP B6, 0
	JNE VERIFICA_NULO_6C
	
	MOV BX, B10
	MOV B6, BX
	
	MOV BX, B14
	MOV B10, BX

	MOV B14, 0
	
VERIFICA_NULO_6C:
	CMP B2, 0
	JNE VERIFICA_NULO_7C
	
	MOV BX, B6
	MOV B2, BX
	
	MOV BX, B10
	MOV B6, BX
	
	MOV BX, B14
	MOV B10, BX

	MOV B14, 0
	
VERIFICA_NULO_7C:
	CMP B11, 0
	JNE VERIFICA_NULO_8C
	
	MOV BX, B15
	MOV B11, BX

	MOV B15, 0
	
VERIFICA_NULO_8C:
	CMP B7, 0
	JNE VERIFICA_NULO_9C
	
	MOV BX, B11
	MOV B7, BX
	
	MOV BX, B15
	MOV B11, BX

	MOV B15, 0
	
VERIFICA_NULO_9C:
	CMP B3, 0
	JNE VERIFICA_NULO_10C
	
	MOV BX, B7
	MOV B3, BX
	
	MOV BX, B11
	MOV B7, BX
	
	MOV BX, B15
	MOV B11, BX

	MOV B15, 0
	
VERIFICA_NULO_10C:
	CMP B12, 0
	JNE VERIFICA_NULO_11C
	
	MOV BX, B16
	MOV B12, BX
	
	MOV B16, 0

VERIFICA_NULO_11C:
	CMP B8, 0
	JNE VERIFICA_NULO_12C
	
	MOV BX, B12
	MOV B8, BX
	
	MOV BX, B16
	MOV B12, BX
	
	MOV B16, 0
	
VERIFICA_NULO_12C:
	CMP B4, 0
	JNE VERIFICA_1C
	
	MOV BX, B8
	MOV B4, BX
	
	MOV BX, B12
	MOV B8, BX
	
	MOV BX, B16
	MOV B12, BX
	
	MOV B16, 0
	
VERIFICA_1C:
	MOV BX, B5
	CMP B1, BX
	JNE PULA1C

	ADD B1, BX
	
	MOV BX, B9
	MOV B5, BX
	
	MOV BX, B13
	MOV B9, BX
	
	MOV B13, 0
	
PULA1C:	
	MOV BX, B9
	CMP B5, BX
	JNE PULA2C

	ADD B5, BX
	
	MOV BX, B13
	MOV B9, BX
	
	MOV B13, 0
	
PULA2C:
	
	MOV BX, B13
	CMP B9, BX
	JNE PULA3C

	ADD B9, BX
	
	MOV B13, 0
	
PULA3C:
	
	MOV BX, B6
	CMP B2, BX
	JNE PULA4C

	ADD B2, BX
	
	MOV BX, B10
	MOV B6, BX
	
	MOV BX, B14
	MOV B10, BX
	
	MOV B14, 0
	
PULA4C:	
	
	MOV BX, B10
	CMP B6, BX
	JNE PULA5C

	ADD B6, BX
	
	MOV BX, B14
	MOV B10, BX
	
	MOV B14, 0
	
PULA5C:	
	
	MOV BX, B14
	CMP B10, BX
	JNE PULA6C

	ADD B10, BX
	
	MOV B14, 0
	
PULA6C:

	MOV BX, B7
	CMP B3, BX
	JNE PULA7C

	ADD B3, BX
	
	MOV BX, B11
	MOV B7, BX
	
	MOV BX, B15
	MOV B11, BX
	
	MOV B15, 0
	
PULA7C:	
	
	MOV BX, B11
	CMP B7, BX
	JNE PULA8C

	ADD B7, BX
	
	MOV BX, B15
	MOV B11, BX
	
	MOV B15, 0
	
PULA8C:	
	
	MOV BX, B15
	CMP B11, BX
	JNE PULA9C

	ADD B11, BX
	
	MOV B15, 0
	
PULA9C:
	
	MOV BX, B8
	CMP B4, BX
	JNE PULA10C

	ADD B4, BX
	
	MOV BX, B12
	MOV B8, BX
	
	MOV BX, B16
	MOV B12, BX
	
	MOV B16, 0	
	
PULA10C:
	
	MOV BX, B12
	CMP B8, BX
	JNE PULA11C

	ADD B8, BX
	
	MOV BX, B16
	MOV B12, BX
	
	MOV B16, 0	
	
PULA11C:
	
	MOV BX, B16
	CMP B12, BX
	JNE PULA12C

	ADD B12, BX
	
	MOV B16, 0	
	
PULA12C:
	
	RET
TECLA_CIMA ENDP

TECLA_BAIXO PROC
VERIFICA_NULO_1B:
	CMP B5, 0
	JNE VERIFICA_NULO_2B
	
	MOV BX, B1
	MOV B5, BX

	MOV B1, 0
	
VERIFICA_NULO_2B:
	CMP B9, 0
	JNE VERIFICA_NULO_3B
	
	MOV BX, B5
	MOV B9, BX
	
	MOV BX, B1
	MOV B5, BX

	MOV B1, 0
	
VERIFICA_NULO_3B:
	CMP B13, 0
	JNE VERIFICA_NULO_4B
	
	MOV BX, B9
	MOV B13, BX
	
	MOV BX, B5
	MOV B9, BX
	
	MOV BX, B1
	MOV B5, BX

	MOV B1, 0
	
VERIFICA_NULO_4B:
	CMP B6, 0
	JNE VERIFICA_NULO_5B
	
	MOV BX, B2
	MOV B6, BX

	MOV B2, 0
	
VERIFICA_NULO_5B:
	CMP B10, 0
	JNE VERIFICA_NULO_6B
	
	MOV BX, B6
	MOV B10, BX
	
	MOV BX, B2
	MOV B6, BX

	MOV B2, 0
	
VERIFICA_NULO_6B:
	CMP B14, 0
	JNE VERIFICA_NULO_7B
	
	MOV BX, B10
	MOV B14, BX
	
	MOV BX, B6
	MOV B10, BX
	
	MOV BX, B2
	MOV B6, BX

	MOV B2, 0
	
VERIFICA_NULO_7B:
	CMP B7, 0
	JNE VERIFICA_NULO_8B
	
	MOV BX, B3
	MOV B7, BX

	MOV B3, 0
	
VERIFICA_NULO_8B:
	CMP B11, 0
	JNE VERIFICA_NULO_9B
	
	MOV BX, B7
	MOV B11, BX
	
	MOV BX, B3
	MOV B7, BX

	MOV B3, 0
	
VERIFICA_NULO_9B:
	CMP B15, 0
	JNE VERIFICA_NULO_10B
	
	MOV BX, B11
	MOV B15, BX
	
	MOV BX, B7
	MOV B11, BX
	
	MOV BX, B3
	MOV B7, BX

	MOV B3, 0
	
VERIFICA_NULO_10B:
	CMP B8, 0
	JNE VERIFICA_NULO_11B
	
	MOV BX, B4
	MOV B8, BX
	
	MOV B4, 0

VERIFICA_NULO_11B:
	CMP B12, 0
	JNE VERIFICA_NULO_12B
	
	MOV BX, B8
	MOV B12, BX
	
	MOV BX, B4
	MOV B8, BX
	
	MOV B4, 0
	
VERIFICA_NULO_12B:
	CMP B16, 0
	JNE VERIFICA_1B
	
	MOV BX, B12
	MOV B16, BX
	
	MOV BX, B8
	MOV B12, BX
	
	MOV BX, B4
	MOV B8, BX
	
	MOV B4, 0
	
VERIFICA_1B:
	MOV BX, B9
	CMP B13, BX
	JNE PULA1B

	ADD B13, BX
	
	MOV BX, B5
	MOV B9, BX
	
	MOV BX, B1
	MOV B5, BX
	
	MOV B1, 0
	
PULA1B:	
	MOV BX, B5
	CMP B9, BX
	JNE PULA2B

	ADD B9, BX
	
	MOV BX, B1
	MOV B5, BX
	
	MOV B1, 0
	
PULA2B:
	
	MOV BX, B1
	CMP B5, BX
	JNE PULA3B

	ADD B5, BX
	
	MOV B1, 0
	
PULA3B:
	
	MOV BX, B10
	CMP B14, BX
	JNE PULA4B

	ADD B14, BX
	
	MOV BX, B6
	MOV B10, BX
	
	MOV BX, B2
	MOV B6, BX
	
	MOV B2, 0
	
PULA4B:	
	
	MOV BX, B6
	CMP B10, BX
	JNE PULA5B

	ADD B10, BX
	
	MOV BX, B2
	MOV B6, BX
	
	MOV B2, 0
	
PULA5B:	
	
	MOV BX, B2
	CMP B6, BX
	JNE PULA6B

	ADD B6, BX
	
	MOV B2, 0
	
PULA6B:

	MOV BX, B11
	CMP B15, BX
	JNE PULA7B

	ADD B15, BX
	
	MOV BX, B7
	MOV B11, BX
	
	MOV BX, B3
	MOV B7, BX
	
	MOV B3, 0
	
PULA7B:	
	
	MOV BX, B7
	CMP B11, BX
	JNE PULA8B

	ADD B11, BX
	
	MOV BX, B3
	MOV B7, BX
	
	MOV B3, 0
	
PULA8B:	
	
	MOV BX, B3
	CMP B7, BX
	JNE PULA9B

	ADD B7, BX
	
	MOV B3, 0
	
PULA9B:
	
	MOV BX, B12
	CMP B16, BX
	JNE PULA10B

	ADD B16, BX
	
	MOV BX, B8
	MOV B12, BX
	
	MOV BX, B4
	MOV B8, BX
	
	MOV B4, 0	
	
PULA10B:
	
	MOV BX, B8
	CMP B12, BX
	JNE PULA11B

	ADD B12, BX
	
	MOV BX, B4
	MOV B8, BX
	
	MOV B4, 0		
	
PULA11B:
	
	MOV BX, B4
	CMP B8, BX
	JNE PULA12B

	ADD B8, BX
	
	MOV B4, 0	
	
PULA12B:
	
	RET
TECLA_BAIXO ENDP

ZERA_BLOCOS PROC
	MOV B1, 0
	MOV B2, 0
	MOV B3, 0
	MOV B4, 0
	MOV B5, 0
	MOV B6, 0
	MOV B7, 0
	MOV B8, 0
	MOV B9, 0
	MOV B10, 0
	MOV B11, 0
	MOV B12, 0
	MOV B13, 0
	MOV B14, 0
	MOV B15, 0
	MOV B16, 0
	
	RET
ZERA_BLOCOS ENDP

RANDOM_POS PROC
;GERA UMA POSICAO RANDOM
	MOV AH, 2CH
	INT 21H
	
	CMP DL, 6
	JLE POS_MEIO_1
	CMP DL, 12
	JLE POS_MEIO_2
	CMP DL, 18
	JLE POS_MEIO_3
	CMP DL, 24
	JLE POS_MEIO_4
	CMP DL, 30
	JLE POS_MEIO_5
	CMP DL, 36
	JLE POS_MEIO_6
	CMP DL, 42
	JLE POS_MEIO_7
	CMP DL, 48
	JLE POS_MEIO_8
	CMP DL, 54
	JLE POS_MEIO_9
	CMP DL, 60
	JLE POS_MEIO_10
	CMP DL, 66
	JLE POS_MEIO_11
	CMP DL, 72
	JLE POS_MEIO_12
	CMP DL, 78
	JLE POS_MEIO_13
	CMP DL, 84
	JLE POS_MEIO_14
	CMP DL, 90
	JLE POS_MEIO_15
	CMP DL, 102
	JLE POS_MEIO_16

	JMP FINAL
POS_MEIO_1: JMP POS_1
POS_MEIO_2: JMP POS_2
POS_MEIO_3: JMP POS_3
POS_MEIO_4: JMP POS_4
POS_MEIO_5: JMP POS_5
POS_MEIO_6: JMP POS_6
POS_MEIO_7: JMP POS_7
POS_MEIO_8: JMP POS_8
POS_MEIO_9: JMP POS_9
POS_MEIO_10: JMP POS_10
POS_MEIO_11: JMP POS_11
POS_MEIO_12: JMP POS_12
POS_MEIO_13: JMP POS_13
POS_MEIO_14: JMP POS_14
POS_MEIO_15: JMP POS_15
POS_MEIO_16: JMP POS_16
POS_1:
	CMP B1, 0
	JNE POS_2
	MOV BX, NUMERO_ATUAL
	MOV B1, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_2:
	CMP B2, 0
	JNE POS_3
	MOV BX, NUMERO_ATUAL
	MOV B2, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_3:
	CMP B3, 0
	JNE POS_4
	MOV BX, NUMERO_ATUAL
	MOV B3, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL
POS_4:
	CMP B4, 0
	JNE POS_5
	MOV BX, NUMERO_ATUAL
	MOV B4, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL
POS_5:
	CMP B5, 0
	JNE POS_6
	MOV BX, NUMERO_ATUAL
	MOV B5, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL
POS_6:
	CMP B6, 0
	JNE POS_7
	MOV BX, NUMERO_ATUAL
	MOV B6, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_7:
	CMP B7, 0
	JNE POS_8
	MOV BX, NUMERO_ATUAL
	MOV B7, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_8:
	CMP B8, 0
	JNE POS_9
	MOV BX, NUMERO_ATUAL
	MOV B8, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL
POS_9:
	CMP B9, 0
	JNE POS_10
	MOV BX, NUMERO_ATUAL
	MOV B9, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_10:
	CMP B10, 0
	JNE POS_11
	MOV BX, NUMERO_ATUAL
	MOV B10, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_11:
	CMP B11, 0
	JNE POS_12
	MOV BX, NUMERO_ATUAL
	MOV B11, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_12:
	CMP B12, 0
	JNE POS_13
	MOV BX, NUMERO_ATUAL
	MOV B12, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_13:
	CMP B13, 0
	JNE POS_14
	MOV BX, NUMERO_ATUAL
	MOV B13, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL	
POS_14:
	CMP B14, 0
	JNE POS_15
	MOV BX, NUMERO_ATUAL
	MOV B14, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL
POS_15:
	CMP B15, 0
	JNE POS_16
	MOV BX, NUMERO_ATUAL
	MOV B15, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL
POS_16:
	CMP B16, 0
	JNE FINAL
	MOV BX, NUMERO_ATUAL
	MOV B16, BX
	MOV TROCOU_POSICAO, 1
	JMP FINAL
	
FINAL:
	RET
RANDOM_POS ENDP

RANDOM_NUMERO PROC
;NUMERO RANDOM ENTRE 2 E 4
	MOV AH, 2CH
	INT 21H
	
	CMP DL, 70
	JL RANDOM_2
	
RANDOM_4:
	MOV NUMERO_ATUAL, 4
	JMP FIM
	
RANDOM_2:
	MOV NUMERO_ATUAL, 2
	JMP FIM
	
FIM:
	RET
RANDOM_NUMERO ENDP

VERIFICA_FINAL PROC
;VERIFICA SE EXISTE POSICOES VALIDAS
VERIFICA_B1:
	CMP B1, 0
	JNE VERIFICA_B2
	
	JMP NAO_ACABOU
	
VERIFICA_B2:
	CMP B2, 0
	JNE VERIFICA_B3
	
	JMP NAO_ACABOU

VERIFICA_B3:
	CMP B3, 0
	JNE VERIFICA_B4
	
	JMP NAO_ACABOU
	
VERIFICA_B4:
	CMP B4, 0
	JNE VERIFICA_B5
	
	JMP NAO_ACABOU
	
VERIFICA_B5:
	CMP B5, 0
	JNE VERIFICA_B6
	
	JMP NAO_ACABOU
	
VERIFICA_B6:
	CMP B6, 0
	JNE VERIFICA_B7
	
	JMP NAO_ACABOU
	
VERIFICA_B7:
	CMP B7, 0
	JNE VERIFICA_B8
	
	JMP NAO_ACABOU
	
VERIFICA_B8:
	CMP B8, 0
	JNE VERIFICA_B9
	
	JMP NAO_ACABOU
	
VERIFICA_B9:
	CMP B9, 0
	JNE VERIFICA_B10
	
	JMP NAO_ACABOU
	
VERIFICA_B10:
	CMP B10, 0
	JNE VERIFICA_B11
	
	JMP NAO_ACABOU
	
VERIFICA_B11:
	CMP B11, 0
	JNE VERIFICA_B12
	
	JMP NAO_ACABOU
	
VERIFICA_B12:
	CMP B12, 0
	JNE VERIFICA_B13
	
	JMP NAO_ACABOU
	
VERIFICA_B13:
	CMP B13, 0
	JNE VERIFICA_B14
	
	JMP NAO_ACABOU
	
VERIFICA_B14:
	CMP B14, 0
	JNE VERIFICA_B15
	
	JMP NAO_ACABOU
	
VERIFICA_B15:
	CMP B15, 0
	JNE VERIFICA_B16
	
	JMP NAO_ACABOU
	
VERIFICA_B16:
	MOV ACABOU, 1
	JMP FINAL1

NAO_ACABOU:	
	MOV ACABOU, 0
	JMP FINAL1
	
FINAL1:
	RET
VERIFICA_FINAL ENDP

VERIFICA_GANHOU PROC
VER1:
	CMP B1, 2048
	JNE VER2
	
	MOV GANHOU, 1
	
VER2:
	CMP B2, 2048
	JNE VER3
	
	MOV GANHOU, 1
	
VER3:
	CMP B3, 2048
	JNE VER4
	
	MOV GANHOU, 1
	
VER4:
	CMP B4, 2048
	JNE VER5
	
	MOV GANHOU, 1
	
VER5:
	CMP B5, 2048
	JNE VER6
	
	MOV GANHOU, 1
	
VER6:
	CMP B6, 2048
	JNE VER7
	
	MOV GANHOU, 1
	
VER7:
	CMP B7, 2048
	JNE VER8
	
	MOV GANHOU, 1
	
VER8:
	CMP B8, 2048
	JNE VER9
	
	MOV GANHOU, 1
	
VER9:
	CMP B9, 2048
	JNE VER10
	
	MOV GANHOU, 1
	
VER10:
	CMP B10, 2048
	JNE VER11
	
	MOV GANHOU, 1
	
VER11:
	CMP B11, 2048
	JNE VER12
	
	MOV GANHOU, 1
	
VER12:
	CMP B12, 2048
	JNE VER13
	
	MOV GANHOU, 1
	
VER13:
	CMP B13, 2048
	JNE VER14
	
	MOV GANHOU, 1
	
VER14:
	CMP B14, 2048
	JNE VER15
	
	MOV GANHOU, 1
	
VER15:
	CMP B15, 2048
	JNE VER16
	
	MOV GANHOU, 1
	
VER16:
	CMP B16, 2048
	JNE VER17
	
	MOV GANHOU, 1
	
VER17:
	
	RET
VERIFICA_GANHOU ENDP

TABULEIRO PROC
;SEQUENCIA LINEAR: 4 + 2
;SEQUENCIA COLUNAR: + C
;AX = POSIÇÃO INICIAL X
;BX = POSIÇÃO INICIAL Y

;LINHA 1
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0101H
	MOV COORD_FIM_QUAD, 0505H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B1_X
	MOV BX, B1_Y
	CALL BORDA	
	
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B1_X
	MOV BX, B1_Y
	MOV CX, B1
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0107H
	MOV COORD_FIM_QUAD, 050BH
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B2_X
	MOV BX, B2_Y
	CALL BORDA	
	
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B2_X
	MOV BX, B2_Y
	MOV CX, B2
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 010DH
	MOV COORD_FIM_QUAD, 0511H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B3_X
	MOV BX, B3_Y
	CALL BORDA	
	
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B3_X
	MOV BX, B3_Y
	MOV CX, B3
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0113H
	MOV COORD_FIM_QUAD, 0517H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B4_X
	MOV BX, B4_Y
	CALL BORDA	
	
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B4_X
	MOV BX, B4_Y
	MOV CX, B4
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;LINHA 2
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0701H
	MOV COORD_FIM_QUAD, 0B05H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B5_X
	MOV BX, B5_Y
	CALL BORDA	
	
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B5_X
	MOV BX, B5_Y
	MOV CX, B5
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0707H
	MOV COORD_FIM_QUAD, 0B0BH
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B6_X
	MOV BX, B6_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B6_X
	MOV BX, B6_Y
	MOV CX, B6
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 070DH
	MOV COORD_FIM_QUAD, 0B11H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B7_X
	MOV BX, B7_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B7_X
	MOV BX, B7_Y
	MOV CX, B7
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0713H
	MOV COORD_FIM_QUAD, 0B17H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B8_X
	MOV BX, B8_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B8_X
	MOV BX, B8_Y
	MOV CX, B8
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	

;LINHA 3
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0D01H
	MOV COORD_FIM_QUAD, 1105H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B9_X
	MOV BX, B9_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B9_X
	MOV BX, B9_Y
	MOV CX, B9
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0D07H
	MOV COORD_FIM_QUAD, 110BH
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B10_X
	MOV BX, B10_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B10_X
	MOV BX, B10_Y
	MOV CX, B10
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0D0DH
	MOV COORD_FIM_QUAD, 1111H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B11_X
	MOV BX, B11_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B11_X
	MOV BX, B11_Y
	MOV CX, B11
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 0D13H
	MOV COORD_FIM_QUAD, 1117H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B12_X
	MOV BX, B12_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B12_X
	MOV BX, B12_Y
	MOV CX, B12
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	

;LINHA 4
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 1301H
	MOV COORD_FIM_QUAD, 1705H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B13_X
	MOV BX, B13_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B13_X
	MOV BX, B13_Y
	MOV CX, B13
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 1307H
	MOV COORD_FIM_QUAD, 170BH
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B14_X
	MOV BX, B14_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B14_X
	MOV BX, B14_Y
	MOV CX, B14
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 130DH
	MOV COORD_FIM_QUAD, 1711H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B15_X
	MOV BX, B15_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B15_X
	MOV BX, B15_Y
	MOV CX, B15
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
;DEFINE OS QUADRADOS INICIAIS
	MOV COORD_INICIO_QUAD, 1313H
	MOV COORD_FIM_QUAD, 1717H
	
	CALL QUADRADO

;COLOCA A BORDA
	MOV AX, B16_X
	MOV BX, B16_Y
	CALL BORDA	
		
	;DEFINE QUAL A POSIÇÃO INICIAL
	MOV AX, B16_X
	MOV BX, B16_Y
	MOV CX, B16
	MOV NUMERO_ATUAL, CX
	
	CALL MOSTRA_NUMERO	
	
	RET
TABULEIRO ENDP

QUADRADO PROC
	MOV AH, 6 ;FUNÇÃO DE SCROLL DA TELA
	MOV AL, 0 ;TELA TODA
	MOV BH, CORES_QUAD ;ATRIBUTOS: 4 PRIMEIROS BYTES BINÁRIOS SÃO A COR DO BG, E OS 4 ÚLTIMOS SÃO A COR DA FONTE
	MOV CX, COORD_INICIO_QUAD ;LINHA E COLUNA DO CANTO SUPERIOR ESQUERDO DO RETÂNGULO
	MOV DX, COORD_FIM_QUAD ;LINHA E COLUNA DO CANTO INFERIOR DIREITO, ATÉ ONDE DEVE PRINTAR PIXELS
	INT 10H
	
	RET
QUADRADO ENDP

MOSTRA_NUMERO PROC
;DEFINE A COR DOS PIXELS DOS NUMEROS
	MOV COR_PIXEL, 0000B

;FUNÇÃO PARA DEFINIR QUAL NUMERO JOGAR NO QUADRADO
	CMP NUMERO_ATUAL, 0
	JE JMPNUM0

	CMP NUMERO_ATUAL, 2
	JE JMPNUM2
	
	CMP NUMERO_ATUAL, 4
	JE JMPNUM4
	
	CMP NUMERO_ATUAL, 8
	JE JMPNUM8
	
	CMP NUMERO_ATUAL, 16
	JE JMPNUM16
	
	CMP NUMERO_ATUAL, 32
	JE JMPNUM32
	
	CMP NUMERO_ATUAL, 64
	JE JMPNUM64
	
	CMP NUMERO_ATUAL, 128
	JE JMPNUM128
	
	CMP NUMERO_ATUAL, 256
	JE JMPNUM256
	
	CMP NUMERO_ATUAL, 512
	JE JMPNUM512
	
	CMP NUMERO_ATUAL, 1024
	JE JMPNUM1024
	
	CMP NUMERO_ATUAL, 2048
	JE JMPNUM2048
	
	JMP RETORNO

JMPNUM0:
	CALL NUMERO_0
	JMP RETORNO
	
JMPNUM2:
	CALL NUMERO_2
	JMP RETORNO

JMPNUM4:
	CALL NUMERO_4
	JMP RETORNO

JMPNUM8:
	CALL NUMERO_8
	JMP RETORNO
	
JMPNUM16:
	CALL NUMERO_16
	JMP RETORNO

JMPNUM32:
	CALL NUMERO_32
	JMP RETORNO

JMPNUM64:
	CALL NUMERO_64
	JMP RETORNO
	
JMPNUM128:
	CALL NUMERO_128
	JMP RETORNO

JMPNUM256:
	CALL NUMERO_256
	JMP RETORNO

JMPNUM512:
	CALL NUMERO_512
	JMP RETORNO	
	
JMPNUM1024:
	CALL NUMERO_1024
	JMP RETORNO

JMPNUM2048:
	CALL NUMERO_2048
	JMP RETORNO
	
RETORNO:	
	RET
MOSTRA_NUMERO ENDP

LINHA_PIXEL PROC
;PRINTA PIXELS
	MOV AH, 0CH
	MOV AL, COR_PIXEL
	MOV CX, X_INICIO_PIXEL
	MOV DX, Y_INICIO_PIXEL
	INT 10H
	
LINHAS:
	INC CX
	INT 10H
	
	CMP CX, X_FIM_PIXEL
	JNE LINHAS
	
	MOV AH, 0
	MOV AL, 0
	
	RET
LINHA_PIXEL ENDP
	
COLUNA_PIXEL PROC
;PRINTA PIXELS
	MOV AH, 0CH
	MOV AL, COR_PIXEL
	MOV CX, X_INICIO_PIXEL
	MOV DX, Y_INICIO_PIXEL
	INT 10H
	
COLUNAS:
	INC DX
	INT 10H
	
	CMP DX, Y_FIM_PIXEL
	JNE COLUNAS
	
	MOV AH, 0
	MOV AL, 0
	
	RET
COLUNA_PIXEL ENDP

NUMERO_0 PROC

	RET
NUMERO_0 ENDP

NUMERO_2 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 26
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD BX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 22
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD BX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	RET
NUMERO_2 ENDP

NUMERO_4 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 11
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 22
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 19
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL	
	
	RET
NUMERO_4 ENDP

NUMERO_8 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 26
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 19
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO

	ADD AX, 22
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 19
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	RET
NUMERO_8 ENDP

NUMERO_16 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 13
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 19
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 9
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 3
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 19
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 19
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 23
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 7
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 23
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 7
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 23
	MOV X_INICIO_PIXEL, AX
	ADD BX, 26
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 7
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 27
	MOV X_INICIO_PIXEL, AX
	ADD BX, 22
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 3
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	RET
NUMERO_16 ENDP

NUMERO_32 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 7
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 7
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 7
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 7
	MOV X_INICIO_PIXEL, AX
	ADD BX, 26
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 15
	MOV X_INICIO_PIXEL, AX
	ADD BX, 14
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 11
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 26
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 11
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 29
	MOV X_INICIO_PIXEL, AX
	ADD BX, 14
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 3
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 22
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 3
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	RET
NUMERO_32 ENDP

NUMERO_64 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 7
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 19
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 11
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 7
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 11
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 7
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 11
	MOV X_INICIO_PIXEL, AX
	ADD BX, 26
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 7
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 15
	MOV X_INICIO_PIXEL, AX
	ADD BX, 22
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 3
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 11
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 29
	MOV X_INICIO_PIXEL, AX
	ADD BX, 10
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 19
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 25
	MOV X_INICIO_PIXEL, AX
	ADD BX, 18
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 3
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
	RET
NUMERO_64 ENDP

NUMERO_128 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 10
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 3
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 12
	MOV X_INICIO_PIXEL, AX
	ADD BX, 17
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 7
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 16
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 16
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 16
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 20
	MOV X_INICIO_PIXEL, AX
	ADD BX, 17
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 1
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 16
	MOV X_INICIO_PIXEL, AX
	ADD BX, 21
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 1
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 28
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	RET
NUMERO_128 ENDP

NUMERO_256 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 9
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 9
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 9
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 13
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 9
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 17
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 17
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 17
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 17
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 25
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 25
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 25
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 25
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 29
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL	
	
	RET
NUMERO_256 ENDP
	
NUMERO_512 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 10
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 10
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 10
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 10
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 14
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 18
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 3
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 20
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO	
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 28
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	RET
NUMERO_512 ENDP
	
NUMERO_1024 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 6
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 3
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 6
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 3
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 8
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 12
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 12
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 12
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 16
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 20
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 20
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 20
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 20
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 24
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 28
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 28
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 32
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL		
	
	RET
NUMERO_1024 ENDP

NUMERO_2048 PROC
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 5
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 5
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 5
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 5
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 9
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 13
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 13
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 13
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 17
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL	
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 21
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 5
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 25
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 29
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 29
	MOV X_INICIO_PIXEL, AX
	ADD BX, 19
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 29
	MOV X_INICIO_PIXEL, AX
	ADD BX, 23
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 5
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
	ADD Y_INICIO_PIXEL, 1
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 29
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 33
	MOV X_INICIO_PIXEL, AX
	ADD BX, 15
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 9
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	ADD X_INICIO_PIXEL, 1
	CALL COLUNA_PIXEL
	
	RET
NUMERO_2048 ENDP

BORDA PROC
;DEFINE A COR DOS PIXELS
	MOV COR_PIXEL, 0011B
	
;SALVA O X E O Y DE INICIO
	MOV X_INICIO_NUMERO, AX
	MOV Y_INICIO_NUMERO, BX
	
	ADD AX, 0
	MOV X_INICIO_PIXEL, AX
	ADD BX, 0
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 39
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 1
	MOV X_INICIO_PIXEL, AX
	ADD BX, 1
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 38
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 0
	MOV X_INICIO_PIXEL, AX
	ADD BX, 39
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 39
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL

;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 1
	MOV X_INICIO_PIXEL, AX
	ADD BX, 38
	MOV Y_INICIO_PIXEL, BX
	ADD AX, 38
	MOV X_FIM_PIXEL, AX
	MOV Y_FIM_PIXEL, BX
	CALL LINHA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 0
	MOV X_INICIO_PIXEL, AX
	ADD BX, 0
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 39
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 1
	MOV X_INICIO_PIXEL, AX
	ADD BX, 1
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 38
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 39
	MOV X_INICIO_PIXEL, AX
	ADD BX, 0
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 39
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
;RESTAURA O X E Y DE INICIO
	MOV AX, X_INICIO_NUMERO
	MOV BX, Y_INICIO_NUMERO
	
	ADD AX, 38
	MOV X_INICIO_PIXEL, AX
	ADD BX, 1
	MOV Y_INICIO_PIXEL, BX
	MOV X_FIM_PIXEL, AX
	ADD BX, 38
	MOV Y_FIM_PIXEL, BX
	CALL COLUNA_PIXEL
	
	RET
BORDA ENDP

BACKGROUND_TABULEIRO PROC
;PRINTA PIXELS DO BACKGROUND
	MOV AH, 0CH
	MOV AL, 1111B
	
	MOV DX, 7
	
BACKGROUND_LOOP_FORA:
	MOV CX, 6

BACKGROUND_LOOP_DENTRO:
	INC CX
	INT 10H
	
	CMP CX, 192
	JNE BACKGROUND_LOOP_DENTRO
	
	INC DX
	
	CMP DX, 193
	JNE BACKGROUND_LOOP_FORA
	
	RET
BACKGROUND_TABULEIRO ENDP

SAI_NUM PROC
;exibe o conteudo de AX como decimal inteiro com sinal
;variaveis de entrada: AX -> valor binario equivalente do número decimal
;variaveis de saida: nehuma (exibição de dígitos direto no monitor de video)

		PUSH 	AX
		PUSH 	BX
		PUSH 	CX
		PUSH 	DX 		;salva na pilha os registradores usados
		OR 		AX,AX 	;prepara comparação de sinal
		JGE 	PT1 	;se AX maior ou igual a 0, vai para PT1
		PUSH 	AX 		;como AX menor que 0, salva o número na pilha
		MOV 	DL,'-'	;prepara o caracter ' - ' para sair
		MOV 	AH,2h 	;prepara exibição
		INT 	21h 	;exibe ' - '
		POP 	AX 		;recupera o número
		NEG 	AX 		;troca o sinal de AX (AX = - AX)
		
		;obtendo dígitos decimais e salvando-os temporariamente na pilha
PT1: 	XOR 	CX,CX 	;inicializa CX como contador de dígitos
		MOV 	BX,10 	;BX possui o divisor
PT2: 	XOR 	DX,DX 	;inicializa o byte alto do dividendo em 0; restante é AX
		DIV 	BX 		;após a execução, AX = quociente; DX = resto
		PUSH 	DX 		;salva o primeiro dígito decimal na pilha (1o. resto)
		INC 	CX 		;contador = contador + 1
		OR 		AX,AX 	;quociente = 0 ? (teste de parada)
		JNE 	PT2 	;não, continuamos a repetir o laço
		
		;exibindo os dígitos decimais (restos) no monitor, na ordem inversa
		MOV 	AH,2h 	;sim, termina o processo, prepara exibição dos restos
PT3: 	POP 	DX 		;recupera dígito da pilha colocando-o em DL (DH = 0)
		ADD 	DL,30h 	;converte valor binário do dígito para caracter ASCII
		INT 	21h 	;exibe caracter
		LOOP 	PT3 	;realiza o loop ate que CX = 0
		POP 	DX 		;restaura o conteúdo dos registros
		POP 	CX
		POP 	BX
		POP 	AX 		;restaura os conteúdos dos registradores
		RET 			;retorna à rotina que chamou
		
SAI_NUM ENDP

LIMPA_TELA PROC
	MOV AH, 2
	MOV BH, 0
	MOV DL, 0
	MOV DH, 0
	INT 10H	
	
	RET
LIMPA_TELA ENDP

END MAIN